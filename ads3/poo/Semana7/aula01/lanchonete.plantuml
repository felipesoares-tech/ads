@startuml lanchonete
abstract Class Pessoa{
    #nome: String
    #cpf: String
}
Class Pedido{
    -numeroPedido: int
    -atendente: Atendente
    -cliente: Cliente
    -listaItem: ArrayList
}
Class Avaliacao{
    -Pedido: pedido
    -String: avaliacao
}

Interface CRUD{
    void cadastrar()
    void visualizar()
    void atualizar()
    void remover()
}

Class Item{
    -codigo: int
    -produto: Produto
    -quantidade: int
    -valorTotal: double
}

Class Produto{
    -codigo: int
    -valorUnitario: double
    -quantiade: int
    -nome: String
}

Class Estoque{
    -listaProduto: ArrayList
}


Class Cliente{

}

Class Atendente{
    -metaDiaria: int
}

Class CadastroCliente{
    -listaClientes: ArrayList
}

Class CadastroPedido{
    -listaPedidos: ArrayList
    -listaItem: ArrayList
    -estoque: Estoque

}

Class CadastroAtendente{
    -ListaAtendentes: ArrayList
}

Class CadastroEstoque{
    -ListaProduto: ArrayList
}

Class CadastroAvaliacao{
    -ListaAvaliacao: ArrayList
}

Pessoa <|-- Cliente: é
Pessoa <|-- Atendente: é
CRUD <|-- CadastroCliente: implementa
CRUD <|-- CadastroAtendente: implementa
CRUD <|-- CadastroEstoque: implementa
CRUD <|-- CadastroPedido: implementa
Cliente *-- "1" Pedido: contém
Pedido "1" *-- "muitos" Produto : contém
Atendente *-- "1" Pedido: contém
Pedido *-- "1" Avaliacao: contém
CadastroPedido -- Cliente
CadastroPedido -- Atendente
CadastroPedido -- Item
CadastroPedido -- Pedido
CadastroPedido -- Estoque
CadastroCliente *-- "1" Cliente: contém
CadastroAtendente *-- "1" Atendente: contém
CadastroEstoque *-- "1" Estoque: contém
CadastroAvaliacao *-- "1" Avaliacao: contém
CadastroAvaliacao -- CadastroPedido
@enduml